<Window
	x:Class="ManaChan.Views.Shell"
	xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
	xmlns:behaviors="clr-namespace:ManaChan.Behaviors"
	xmlns:converter="clr-namespace:ManaChan.Converter"
	xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
	xmlns:interactivity="http://schemas.microsoft.com/expression/2010/interactivity"
	xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
	xmlns:prism="http://prismlibrary.com/"
	xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
	behaviors:CloseWindowAttachedBehavior.Close="{ Binding IsCloseWindow }"
	mc:Ignorable="d"
	prism:ViewModelLocator.AutoWireViewModel="True"
	AllowsTransparency="True"
	Background="Transparent"
	Height="{ Binding PrimaryScreenSize.Height }"
	WindowStartupLocation="CenterScreen"
	Title="{ Binding Title }"
	Width="{ Binding PrimaryScreenSize.Width }"
	WindowStyle="None"
	ShowInTaskbar="False"
	Topmost="True">

	<Window.Resources>
		<converter:EnumToBooleanConverter x:Key="EnumToBooleanConverter" />
	</Window.Resources>

	<!-- トリガー群 -->
	<interactivity:Interaction.Triggers>

		<!-- ポップアップ -->
		<prism:InteractionRequestTrigger
			SourceObject="{ Binding NotificationRequest , Mode=OneWay }" >
			<prism:PopupWindowAction
				IsModal="True"
				CenterOverAssociatedObject="True">
				<prism:PopupWindowAction.WindowStyle>
					<Style
						TargetType="Window">
						<Setter
							Property="ResizeMode"
							Value="NoResize" />
						<Setter
							Property="SizeToContent"
							Value="WidthAndHeight" />
					</Style>
				</prism:PopupWindowAction.WindowStyle>
			</prism:PopupWindowAction>
			
		</prism:InteractionRequestTrigger>

	</interactivity:Interaction.Triggers>

	<!-- 右クリックメニュー -->
	<Window.ContextMenu>
		<ContextMenu>
			<MenuItem
				Command="{ Binding AlartTextCommandOfContextMenu }"
				Header="{ Binding AlartTestHeaderOfContextMenu }" />
			<MenuItem
				Command="{ Binding CharacterSpecialLargeCommandOfContextMenu }"
				Header="{ Binding CharacterSpecialLargeHeaderOfContextMenu }" 
				IsCheckable="True"
				IsChecked="{ 
					Binding 
					Path=CharacterSize ,
					Converter={ StaticResource EnumToBooleanConverter } ,
					ConverterParameter=SpecialLarge
				}" />
			<MenuItem
				Command="{ Binding CharacterLargeCommandOfContextMenu }"
				Header="{ Binding CharacterLargeHeaderOfContextMenu }"
				IsCheckable="True"
				IsChecked="{ 
					Binding 
					Path=CharacterSize ,
					Converter={ StaticResource EnumToBooleanConverter } ,
					ConverterParameter=Large
				}" />
			<MenuItem
				Command="{ Binding CharacterMediumCommandOfContextMenu }"
				Header="{ Binding CharacterMediumHeaderOfContextMenu }"
				IsCheckable="True"
				IsChecked="{ 
					Binding 
					Path=CharacterSize ,
					Converter={ StaticResource EnumToBooleanConverter } ,
					ConverterParameter=Medium
				}"  />
			<MenuItem
				Command="{ Binding CharacterSmallCommandOfContextMenu }"
				Header="{ Binding CharacterSmallHeaderOfContextMenu }"
				IsCheckable="True"
				IsChecked="{ 
					Binding 
					Path=CharacterSize ,
					Converter={ StaticResource EnumToBooleanConverter } ,
					ConverterParameter=Small
				}" />
			<MenuItem
				Command="{ Binding QuitCommandOfContextMenu }"
				Header="{ Binding QuitHeaderOfContextMenu }"
				IsEnabled="{ Binding IsQuitEnabledOfContextMenu }" />
		</ContextMenu>
	</Window.ContextMenu>


	<Canvas
		Name="canvas" >
		<ContentControl
			Canvas.Left="{ Binding CharacterPosX }"
			Canvas.Top="{ Binding CharacterPosY }"
			Height="{ Binding CharacterHeight }"
			MouseLeftButtonDown="CharacterMouseLeftButtonDown"
			MouseLeftButtonUp="CharacterMouseLeftButtonUp"
			MouseMove="CharacterMouseMove"
			Width="{ Binding CharacterWidth }"
			prism:RegionManager.RegionName="MainRegion" />
		
	</Canvas>

</Window>
